$date
	Thu Oct 10 15:20:55 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module fulladder_tb $end
$var wire 1 ! co $end
$var wire 4 " S [3:0] $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % ci $end
$scope module uut $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 % ci $end
$var wire 1 ! co $end
$var wire 5 ( ci_wire [4:0] $end
$var wire 4 ) S [3:0] $end
$scope begin adder[0] $end
$scope module a0 $end
$var wire 1 * A $end
$var wire 1 + B $end
$var wire 1 , S $end
$var wire 1 - ci $end
$var wire 1 . co $end
$upscope $end
$upscope $end
$scope begin adder[1] $end
$scope module a0 $end
$var wire 1 / A $end
$var wire 1 0 B $end
$var wire 1 1 S $end
$var wire 1 2 ci $end
$var wire 1 3 co $end
$upscope $end
$upscope $end
$scope begin adder[2] $end
$scope module a0 $end
$var wire 1 4 A $end
$var wire 1 5 B $end
$var wire 1 6 S $end
$var wire 1 7 ci $end
$var wire 1 8 co $end
$upscope $end
$upscope $end
$scope begin adder[3] $end
$scope module a0 $end
$var wire 1 9 A $end
$var wire 1 : B $end
$var wire 1 ; S $end
$var wire 1 < ci $end
$var wire 1 = co $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0=
0<
1;
0:
19
08
17
16
05
04
13
12
11
10
1/
1.
0-
0,
1+
1*
b1110 )
b110 (
b11 '
b1011 &
0%
b11 $
b1011 #
b1110 "
0!
$end
#10000
b1111 "
b1111 )
1,
1-
b111 (
1%
